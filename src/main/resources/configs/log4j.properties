### ERROR 为严重错误
### WARN 为一般警告
### INFO 为一般要显示的信息，比如登录登出
### DEBUG 为程序的调试信息

# %p: 输出日志信息优先级，即DEBUG，INFO，WARN，ERROR，FATAL,
# %d: 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921
# %r: 输出自应用启动到输出该log信息耗费的毫秒数
# %c: 输出日志信息所属的类目，通常就是所在类的全名
# %t: 输出产生该日志事件的线程名
# %l: 输出日志事件的发生位置，相当于%C.%M(%F:%L)的组合,包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main (TestLog4.java:10)
# %x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。
# %%: 输出一个"%"字符
# %F: 输出日志消息产生时所在的文件名称
# %L: 输出代码中的行号
# %m: 输出代码中指定的消息,产生的日志具体信息
# %n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行

### 设置 ###
### 最低输出等级和输出appender
log4j.rootLogger = warnLog,errorLog

##################################### 控制台 ##########################################
#### 输出至控制台
#log4j.appender.consoleLog = org.apache.log4j.ConsoleAppender
#### 日志立马刷新
#log4j.appender.consoleLog.ImmediateFlush=true
#### 指定输出控制台
#log4j.appender.consoleLog.Target = System.out
#### 样式
#log4j.appender.consoleLog.layout = org.apache.log4j.PatternLayout
#log4j.appender.consoleLog.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
#################################### 控制台 ##########################################

##################### info

##################### warn
### 每日滚动文件
log4j.appender.warnLog = org.apache.log4j.RollingFileAppender
### 输出的文件路径
log4j.appender.warnLog.File = ${webapp.root}/WEB-INF/logs/warn.log  
### 是否追加
log4j.appender.warnLog.Append = true
### 输出的最低等级
log4j.appender.warnLog.Threshold = WARN
### 所有的消息都会被立即输出
log4j.appender.warnLog.ImmediateFlush = true
### 样式
log4j.appender.warnLog.layout = org.apache.log4j.PatternLayout
log4j.appender.warnLog.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

##################### error
### 每日滚动文件
###如果想每天自动回滚日子文件，可以采用DailyRollingFileAppender，但是这个不注意的话，很容易造成日志爆炸，当然可以复写一个DailyRollingFileAppender解决问题
log4j.appender.errorLog = org.apache.log4j.RollingFileAppender
### 输出的文件路径
log4j.appender.errorLog.File = ${webapp.root}/WEB-INF/logs/error.log  
### 是否追加
log4j.appender.errorLog.Append = true
### 输出的最低等级
log4j.appender.errorLog.Threshold = ERROR
#设置errorLog的日志最大限制  
log4j.appender.errorLog.MaxFileSize=1024KB  
#最多只保存20个备份文件  
log4j.appender.errorLog.MaxBackupIndex=20
### 所有的消息都会被立即输出
log4j.appender.errorLog.ImmediateFlush = true
### 样式
log4j.appender.errorLog.layout = org.apache.log4j.PatternLayout
log4j.appender.errorLog.layout.ConversionPattern =%-d{yyyy-MM-dd HH\:mm\:ss}  [ %t\:%r ] - [ %p ]  %m%n